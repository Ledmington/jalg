plugins {
    id 'java'
    id 'application'
    id 'com.diffplug.spotless' version '6.25.0'
}

static def path(String... args) {
    return String.join(File.separator, args)
}

group = 'com.ledmington.jalg'
version = '0.1.0'
final String appName = 'jalg'
final String appDescription = 'Linear Algebra with java'
final String author = 'Filippo Barbari'
final String authorMail = 'filippo.barbari@gmail.com'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

ext.junitVersion = '5.11.3'

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << '-Xdiags:verbose'
    options.compilerArgs << '-Xlint:all'
    options.compilerArgs << '-Werror'
    options.deprecation = true
    options.encoding = 'UTF-8'
}

javadoc {
    failOnError = true
    title "emu-v${version}-doc"
    options.encoding = 'UTF-8'
    options.addBooleanOption('Werror', true)
}

// cleanup tasks
clean.dependsOn('cleanBin')

// remove default VSCode build directory
tasks.register('cleanBin', Delete) {
    delete "${project.projectDir}/bin"
}

spotless {
    format 'misc', {
        target '*.md', '.gitignore', '.gitattributes'
        trimTrailingWhitespace()
        indentWithTabs()
        endWithNewline()
        setEncoding('utf-8')
    }

    java {
        target fileTree('.') {
            include path('**', '*.java')
            exclude path('**', 'build', '**'), path('**', 'build-*', '**'), path('**', 'bin', '**')
        }
        setEncoding('utf-8')
        removeUnusedImports()
        palantirJavaFormat('2.50.0').formatJavadoc(true)
        indentWithTabs()
        formatAnnotations()
        trimTrailingWhitespace()
        endWithNewline()

        // check https://javadoc.io/doc/com.diffplug.spotless/spotless-plugin-gradle/latest/com/diffplug/gradle/spotless/JavaExtension.html
        importOrder('java', 'javax', 'javafx', 'org.junit', 'com', 'com.ledmington', 'org', group as String)

        licenseHeader String.join("\n",
                "/*",
                " * ${appName} - ${appDescription}",
                " * Copyright (C) 2024-${new Date().format('yyyy')} ${author} <${authorMail}>",
                " *",
                " * This program is free software: you can redistribute it and/or modify",
                " * it under the terms of the GNU General Public License as published by",
                " * the Free Software Foundation, either version 3 of the License, or",
                " * (at your option) any later version.",
                " *",
                " * This program is distributed in the hope that it will be useful,",
                " * but WITHOUT ANY WARRANTY; without even the implied warranty of",
                " * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
                " * GNU General Public License for more details.",
                " *",
                " * You should have received a copy of the GNU General Public License",
                " * along with this program.  If not, see <http://www.gnu.org/licenses/>.",
                " */",
        )
    }
}

allprojects.each {
    it.tasks.compileJava.dependsOn(spotlessApply)
    it.tasks.build.dependsOn(it.tasks.javadoc)
}
